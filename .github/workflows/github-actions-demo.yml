name: CI

# This workflow gets triggered on push events to the main branch
on:
  push:
    branches: [ demo ]

# Setting environment variables at the workflow level
env:
  RESOURCE_GROUP: rg-copilot-demo # The name of your Azure resource group
  CONTAINER_APP_NAME: aca-demo-0208 # The name of your Azure Container App
  ENVIRONMENT_NAME: managedEnvironment-rgcopilotdemo-89d7 # The name of your Azure Container Apps environment
  ACR_LOGIN_SERVER: demoacr0207.azurecr.io # The login server of your Azure Container Registry
  IMAGE_NAME: my-fastapi-app # The name of your Docker image
  IMAGE_TAG: ${{ github.sha }} # Using the commit SHA as the image tag

jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
    # Checks out a copy of your repository on the ubuntu-latest machine
    - uses: actions/checkout@v2

    # Logs in to Azure using the AZURE_CREDENTIALS secret
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # Log into Azure Container Registry
    - name: Log into Azure Container Registry
      uses: docker/login-action@v1
      with:
        registry: ${{ env.ACR_LOGIN_SERVER }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    # Builds and pushes the Docker image to your Azure Container Registry (ACR)
    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: . # Specifies the directory containing the Dockerfile
        push: true # Pushes the Docker image to the Docker registry
        tags: $ACR_LOGIN_SERVER/$IMAGE_NAME:$IMAGE_TAG # Specifies the Docker image tag

    # Deploys the Docker image to Azure Container Apps
    - name: Deploy to Azure Container Apps
      run: |
        az containerapp create --resource-group $RESOURCE_GROUP --name $CONTAINER_APP_NAME --environment $ENVIRONMENT_NAME --image $ACR_LOGIN_SERVER/$IMAGE_NAME:$IMAGE_TAG